Suponga que se tiene un curso con 50 alumnos. Cada alumno debe realizar una tarea y
existen 10 enunciados posibles. Una vez que todos los alumnos eligieron su tarea,
comienzan a realizarla. Cada vez que un alumno termina su tarea, le avisa al profesor y se
queda esperando el puntaje del grupo (depende de todos aquellos que comparten el
mismo enunciado). Cuando un grupo terminó, el profesor les otorga un puntaje que
representa el orden en que se terminó esa tarea de las 10 posibles.

Nota: Para elegir la tarea suponga que existe una función elegir que le asigna una tarea a
un alumno (esta función asignará 10 tareas diferentes entre 50 alumnos, es decir, que 5
alumnos tendrán la tarea 1, otros 5 la tarea 2 y así sucesivamente para las 10 tareas).

//
Analisis: 
    - Los grupos son designados por los enunciados (1..10)
    - Los grupros se designaran con una funcion dada
    - El profesor tiene que esperar a que un grupo termine y darle su puntaje

#Globales

cola llegada
sem llegadaMtx = 1

sem llege = 0

sem grupolisto[1..10](0)

int results[1..10]:

int alumnosQueEligieron = 0

sem todosEligieron = 0
sem mutexEleccion = 1

process alumnos[1..50]:
    int idTarea = obtenerTarea()

    idTarera = elegir()
    P(mutexsEleccion)
    alumnosQueEligieron++
    
    # Se espera a que todos hayan elegido para hacer la tarea
    if(alumnosQueEligieron == 50)
        V(todosEligieron)
    V(mutexEleccion)

    P(todosEligieron)
    V(todosEligieron)

    //hacer tarea
    delay()
    
    P(llegadaMtx)
    llegada.push(idTarea)
    V(llegadaMtx)
    V(llega)
    
    P(grupoListo[idTarea])
    int nota = result[idTaera]

Process Profesor::
    int puesto = 0
    int idGrupo
    int contXgrupo[1..10](0)
    
    while puesto < 10
        P(llega)

        P(llegadaMtx)
        idGrupo = llegada.pop()        
        V(llegadaMtx)
        
        contXgrupo[idGrupo]++
        if(contXgrupo == 5)
            puesto++
            result[idGrupo]
            for 1 to 5
                V(grupoListo[idGrupo])